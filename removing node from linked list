#include <stdio.h>
#include <stdlib.h>


struct ListNode* reverseList(struct ListNode* head) {
    struct ListNode* prev = NULL;
    struct ListNode* curr = head;
    struct ListNode* next = NULL;
    
    while (curr != NULL) {
        next = curr->next;  // Save next node
        curr->next = prev;  // Reverse current node's pointer
        prev = curr;        // Move pointers one step ahead
        curr = next;
    }
    
    return prev;
}


struct ListNode* removeNodes(struct ListNode* head) {
    
    head = reverseList(head);
    
    struct ListNode* curr = head;
    int max_val = curr->val;  
    
    while (curr != NULL && curr->next != NULL) {
       
        if (curr->next->val < max_val) {
            struct ListNode* temp = curr->next;
            curr->next = curr->next->next;  
            free(temp);  
        } else {
            curr = curr->next;  
            max_val = curr->val; 
        }
    }

   
    return reverseList(head);
}
